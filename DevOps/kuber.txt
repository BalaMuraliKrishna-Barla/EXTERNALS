apiVersion: apps/v1
kind: Deployment
metadata:
  name: reg-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reg-app
  template:
    metadata:
      labels:
        app: reg-app
    spec:
      containers:
        - name: reg-app
          image: reg-app:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 5000

---
apiVersion: v1
kind: Service
metadata:
  name: reg-service
spec:
  type: NodePort
  selector:
    app: reg-app
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000


commands:-
# Install  kubectl - https://kubernetes.io/releases/download/#binaries

# Install minikube - https://minikube.sigs.k8s.io/docs/start/?arch=%2Fwindows%2Fx86-64%2Fstable%2F.exe+download

# check for kubectl and minikube is installed or not

# 1. Start Minikube with Docker driver (if you haven't done it already)
minikube start --driver=docker

# 2. Set Docker to use Minikube's Docker daemon (so we can build images inside Minikube)
& minikube -p minikube docker-env | Invoke-Expression

# 3. Build the Docker image for your Flask app
docker build -t reg-app .

# 4. Apply the Kubernetes deployment and service YAML configuration
kubectl apply -f reg-app.yaml

# 5. Expose the service (if not done automatically in the YAML file)
# This step may be redundant because it's already in the YAML file, but you can do it manually:
kubectl expose deployment reg-app --type=NodePort --port=5000

# 6. Get the service URL (this will open the service's URL in your browser)
minikube service reg-service --url

